1) this_Nati

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WindowsFormsApp1_Nati
{
    class Persoana
    {
        protected string nume;
        protected byte varsta;

        public Persoana(string nume, byte varsta)
        {
            this.nume = nume;
            this.varsta = varsta;
        }
    }
}



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WindowsFormsApp1_Nati
{
    class Student : Persoana
    {
        private byte an;
        private byte[] note = new byte[5];

        public Student(byte[] note, byte an, string nume, byte varsta) : base(nume, varsta)
        {
            this.an = an;
            this.note = note;
        }

        public byte AnStudiu
        {
            get { return an; }
        }

        public string NumeStudent
        {
            get { return nume; }
        }

        public string AfisareStudent()
        {
            return "Nume: " + nume + " varsta: " + varsta + " an: " + an + " medie: " + Medie();
        }

        public float Medie()
        { 
            float medie = 0;

            for (int i = 0; i < 5; i++)
            {
                medie += note[i];
            }

            return medie/5;
        }

    }
}




using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp1_Nati
{
    public partial class Form1 : Form
    {
        private List<Student> lista = new List<Student>();

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e) //adauga
        {
            listBox1.Items.Clear();

            byte[] note = new byte[5];

            note[0] = Convert.ToByte(comboBox2.Text);
            note[1] = Convert.ToByte(comboBox3.Text);
            note[2] = Convert.ToByte(comboBox4.Text);
            note[3] = Convert.ToByte(comboBox5.Text);
            note[4] = Convert.ToByte(comboBox6.Text);

            byte varsta = Convert.ToByte(DateTime.Now.Year - dateTimePicker1.Value.Year);

            if (DateTime.Now.Month < dateTimePicker1.Value.Month)
            {
                varsta--;
            }
            else if (DateTime.Now.Month == dateTimePicker1.Value.Month)
            {
                if (DateTime.Now.Day < dateTimePicker1.Value.Day)
                {
                    varsta--;
                }
            }

            byte new_vrst = varsta == 255? (byte)0 : varsta;

            Student s = new Student(note, Byte.Parse(comboBox1.Text), textBox1.Text, new_vrst);
            lista.Add(s);
        }

        private void button1_Click(object sender, EventArgs e) //sterge
        {
            // stergerea unei persoane
            // lista.Clear();
            try
            {
                lista.RemoveAt(listBox1.SelectedIndex);
                listBox1.Items.RemoveAt(listBox1.SelectedIndex);
            }
            catch (Exception exc)
            {
                MessageBox.Show("Stergere invalida!");
            }
        }

        private void button3_Click(object sender, EventArgs e)//ord medie
        {
            listBox1.Items.Clear();
            ComparaMedie CompMedie = new ComparaMedie();
            lista.Sort(CompMedie);

            foreach (Student stud in lista) listBox1.Items.Add(stud.AfisareStudent());
        }

        private void button4_Click(object sender, EventArgs e)//ord nume
        {
            listBox1.Items.Clear();
            ComparaNume CompNume = new ComparaNume();
            lista.Sort(CompNume);

            foreach (Student stud in lista) listBox1.Items.Add(stud.AfisareStudent());
        }

        private void button5_Click(object sender, EventArgs e)//af stud din an
        {
            listBox1.Items.Clear();
            byte CautareAn = Convert.ToByte(comboBox7.SelectedItem);

            foreach (Student stud in lista)
            {
                if (stud.AnStudiu == CautareAn)
                {
                    listBox1.Items.Add(stud.AfisareStudent());
                }
            }
        }

        private void button6_Click(object sender, EventArgs e)//cautare nume
        {
            listBox1.Items.Clear();

            string CautareNume = textBox2.Text;

            foreach (Student stud in lista)
            {
                if (stud.NumeStudent.CompareTo(CautareNume) == 0)
                {
                    listBox1.Items.Add(stud.AfisareStudent());
                }
                else
                {

                }
            }
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void numericUpDown1_ValueChanged(object sender, EventArgs e)
        {

        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void comboBox2_SelectedIndexChanged(object sender, EventArgs e) //nota 1
        {
            
        }
        
        private void comboBox3_SelectedIndexChanged(object sender, EventArgs e) //nota 2
        {

        }

        private void comboBox4_SelectedIndexChanged(object sender, EventArgs e) //nota 3
        {

        }

        private void comboBox5_SelectedIndexChanged(object sender, EventArgs e) //nota 4
        {

        }

        private void comboBox6_SelectedIndexChanged(object sender, EventArgs e) //nota 5
        {

        }

        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void comboBox7_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void textBox2_TextChanged(object sender, EventArgs e)
        {

        }

        private void dateTimePicker1_ValueChanged(object sender, EventArgs e)
        {

        }
    }

    class ComparaMedie : IComparer<Student>
    {
        public int Compare(Student x, Student y)
        {
            if (x.Medie() < y.Medie())
                return 1;
            else if (x.Medie() == y.Medie())
                return 0;
            else
                return -1;
        }
    }

    class ComparaNume : IComparer<Student>
    {
        public int Compare(Student x, Student y)
        {
            if (x.NumeStudent.CompareTo(y.NumeStudent) > 0)
                return 1;
            else if (x.NumeStudent.CompareTo(y.NumeStudent) == 0)
                return 0;
            else
                return -1;
        }
    }

}


*********************************************************************************************************************************

2)  fara this
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace WindowsFormsApplication4
{
    class Persoana
    {
        protected string nume;
        protected byte varsta;
        public Persoana(string Nume, byte Varsta)
        {
            nume = Nume;
            varsta = Varsta;
        }
    }
}




using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace WindowsFormsApplication4
{
    class Student:Persoana
    {
        private byte an;
        private byte[] note=new byte[5];
        public byte AnStudiu
        {
            get { return an; }
        }
        public string NumeStudent
        {
            get { return nume; }
        }
        public float Medie()
        {
            return (float)(note[0] + note[1] + note[2] + note[3] + note[4]) / 5;
        }
        public string AfisareStudent()
        {
           return (nume+' '+varsta+' '+an+' '+Medie());
        }
        public Student(byte An, byte[] Note, string Nume, Byte Varsta):base(Nume,Varsta)
        {
            an = An;
            note = Note;
        }
    }
}



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace WindowsFormsApplication4
{
    public partial class Form1 : Form
    {
        private List<Student> Lista = new List<Student>();
        public Form1()
        {
            InitializeComponent();
        }

        private void label1_Click(object sender, EventArgs e)
        {
            byte an = Convert.ToByte(comboBox1.Text);
            byte[] note = new byte[5];
            string nume = textBox1.Text;
            byte varsta = Convert.ToByte(numericUpDown1.Value);
            note[0] = Convert.ToByte(comboBox2.Text);
            note[1] = Convert.ToByte(comboBox3.Text);
            note[2] = Convert.ToByte(comboBox4.Text);
            note[3] = Convert.ToByte(comboBox5.Text);
            note[4] = Convert.ToByte(comboBox6.Text);
            Student s = new Student(an, note, nume, varsta);
            Lista.Add(s);
            listBox1.Items.Add(s.AfisareStudent());
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            Student aux;
            int i, j, n;
            n = Lista.Count;
            for (i = 0; i < n - 1; i++)
            {
                for (j = i + 1; j < n; j++)
                {
                    if (Lista[i].NumeStudent.CompareTo(Lista[j].NumeStudent) > 0)
                    {
                        aux = Lista[i];
                        Lista[i] = Lista[j];
                        Lista[j] = aux;
                    }
                }
            }
            listBox1.Items.Clear();
            foreach (Student s in Lista)
                listBox1.Items.Add(s.AfisareStudent());
        }

        private void button3_Click(object sender, EventArgs e)
        {
            Student aux;
            int i, j, n;
            n = Lista.Count;
            for (i = 0; i < n - 1; i++)
            {
                for (j = i + 1; j < n; j++)
                {
                    if (Lista[i].Medie()>Lista[j].Medie())
                    {
                        aux = Lista[i];
                        Lista[i] = Lista[j];
                        Lista[j] = aux;
                    }
                }
            }
            listBox1.Items.Clear();
            foreach (Student s in Lista)
                listBox1.Items.Add(s.AfisareStudent());
        }

        private void button4_Click(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
            byte an = Convert.ToByte(comboBox7.Text);
            foreach (Student s in Lista)
            {
                if (s.AnStudiu == an)
                    listBox1.Items.Add(s.AfisareStudent());
            }
        }

        private void button5_Click(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
            string nume = textBox2.Text;
            foreach (Student s in Lista)
            {
                if (s.NumeStudent.CompareTo(nume)==0)
                    listBox1.Items.Add(s.AfisareStudent());
            }
        }

        private void button6_Click(object sender, EventArgs e)
        {
            int i, n;
            n = Lista.Count;
            for (i = 0; i < n; i++)
            {
                if (listBox1.GetSelected(i))
                {
                    Lista.Remove(Lista[i]);
                }
            }
            listBox1.Items.Clear();
            foreach (Student s in Lista)
                listBox1.Items.Add(s.AfisareStudent());
        }
    }
}

*****************************************************************************************
3) facut de Gabi

using System;
using System.Collections;
using System.Collections.Generic;

namespace delete_me
{
    class Student
    {
        string nume;
        int age;
        string prenume;

        public string getNume() { return nume; }
        public int getAge() { return age; }
        public Student(string nume, string prenume, int age)
        {
            this.nume = nume;
            this.prenume = prenume;
            this.age = age;
        }
        public override string ToString()
        {
            return nume + " " + prenume + " : " + age;
        }
        public static void show(List<Student> plm)
        {
            foreach (var x in plm)
            {
                Console.WriteLine(x.ToString());
            }
            Console.WriteLine("------------------------------------------------------");
        }

    }

    class Program
    {
        static void Main(string[] args)
        {
            List<Student> plm = new List<Student>();
            plm.Add(new Student("dan", "popescu", 10));
            plm.Add(new Student("ionut", "mihia", 3));
            plm.Add(new Student("matei", "ionescu", 2));
            plm.Add(new Student("marin", "mihia", 10));
            plm.Add(new Student("ioan", "mirel", 10));
            plm.Add(new Student("ana", "bizdoc", 1));
            plm.Add(new Student("gabi", "bizdoc", 10));
            plm.Add(new Student("radi", "bizdoc", 10));
            plm.Add(new Student("persona", "da", 6));
            plm.Add(new Student("nustiu", "nu", 10));
            plm.Add(new Student("etc", "mihia", 4));

            Student.show(plm);
            
            plm.Sort((x,y) => {
               return x.getNume().CompareTo(y.getNume());
            });
            Student.show(plm);

            plm.Sort((x, y) => {
                return x.getAge() < y.getAge() ? -1 : 1;
            });
            Student.show(plm);

            plm.RemoveAll((x) => { return x.getNume().CompareTo("gabi") == 0; });
            Student.show(plm);

        }
    }
}

****************************************************************************************************

4)






